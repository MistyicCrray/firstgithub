package com.springboot.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import com.springboot.entity.News;

@Mapper
public interface NewsMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table news
	 *
	 * @mbggenerated Wed Mar 06 14:24:52 CST 2019
	 */
	@Delete({ "delete from news", "where id = #{id,jdbcType=VARCHAR}" })
	int deleteByPrimaryKey(String id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table news
	 *
	 * @mbggenerated Wed Mar 06 14:24:52 CST 2019
	 */
	@Insert({ "insert into news (id, title, ", "content, sub, createdate, ", "updatedate, createby, ",
			"updateby, istop)", "values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, ",
			"#{content,jdbcType=VARCHAR}, #{sub,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, ",
			"#{updatedate,jdbcType=TIMESTAMP}, #{createby,jdbcType=VARCHAR}, ",
			"#{updateby,jdbcType=VARCHAR}, #{istop,jdbcType=VARCHAR})" })
	int insert(News record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table news
	 *
	 * @mbggenerated Wed Mar 06 14:24:52 CST 2019
	 */
	@Select({ "select", "id, title, content, sub, createdate, updatedate, createby, updateby, istop", "from news",
			"where id = #{id,jdbcType=VARCHAR}" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
			@Result(column = "title", property = "title", jdbcType = JdbcType.VARCHAR),
			@Result(column = "content", property = "content", jdbcType = JdbcType.VARCHAR),
			@Result(column = "sub", property = "sub", jdbcType = JdbcType.VARCHAR),
			@Result(column = "createdate", property = "createdate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "updatedate", property = "updatedate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "createby", property = "createby", jdbcType = JdbcType.VARCHAR),
			@Result(column = "updateby", property = "updateby", jdbcType = JdbcType.VARCHAR),
			@Result(column = "istop", property = "istop", jdbcType = JdbcType.VARCHAR) })
	News selectByPrimaryKey(String id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table news
	 *
	 * @mbggenerated Wed Mar 06 14:24:52 CST 2019
	 */
	@Select({ "select", "id, title, content, sub, createdate, updatedate, createby, updateby, istop", "from news" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
			@Result(column = "title", property = "title", jdbcType = JdbcType.VARCHAR),
			@Result(column = "content", property = "content", jdbcType = JdbcType.VARCHAR),
			@Result(column = "sub", property = "sub", jdbcType = JdbcType.VARCHAR),
			@Result(column = "createdate", property = "createdate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "updatedate", property = "updatedate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "createby", property = "createby", jdbcType = JdbcType.VARCHAR),
			@Result(column = "updateby", property = "updateby", jdbcType = JdbcType.VARCHAR),
			@Result(column = "istop", property = "istop", jdbcType = JdbcType.VARCHAR) })
	List<News> selectAll();

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table news
	 *
	 * @mbggenerated Wed Mar 06 14:24:52 CST 2019
	 */
	@Update({ "update news", "set title = #{title,jdbcType=VARCHAR},", "content = #{content,jdbcType=VARCHAR},",
			"sub = #{sub,jdbcType=VARCHAR},", "createdate = #{createdate,jdbcType=TIMESTAMP},",
			"updatedate = #{updatedate,jdbcType=TIMESTAMP},", "createby = #{createby,jdbcType=VARCHAR},",
			"updateby = #{updateby,jdbcType=VARCHAR},", "istop = #{istop,jdbcType=VARCHAR}",
			"where id = #{id,jdbcType=VARCHAR}" })
	int updateByPrimaryKey(News record);

	@SelectProvider(type = com.springboot.entity.dyna.NewsDynaProvider.class, method = "selectProvider")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
			@Result(column = "title", property = "title", jdbcType = JdbcType.VARCHAR),
			@Result(column = "content", property = "content", jdbcType = JdbcType.VARCHAR),
			@Result(column = "sub", property = "sub", jdbcType = JdbcType.VARCHAR),
			@Result(column = "createdate", property = "createdate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "updatedate", property = "updatedate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "createby", property = "createby", jdbcType = JdbcType.VARCHAR),
			@Result(column = "updateby", property = "updateby", jdbcType = JdbcType.VARCHAR),
			@Result(column = "istop", property = "istop", jdbcType = JdbcType.VARCHAR) })
	List<News> findList(Map<String, Object> map);

	@SelectProvider(type = com.springboot.entity.dyna.NewsDynaProvider.class, method = "updateProvider")
	Integer update(Map<String, Object> map);

}