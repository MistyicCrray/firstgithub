package com.springboot.mapper;

import com.springboot.entity.Address;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface AddressMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Nov 25 17:20:28 CST 2018
     */
    @Delete({
        "delete from address",
        "where addrid = #{addrid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String addrid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Nov 25 17:20:28 CST 2018
     */
    @Insert({
        "insert into address (addrid, userid, ",
        "province, city, ",
        "region, address, ",
        "postal, consignee, ",
        "phone, status, createdate)",
        "values (#{addrid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, ",
        "#{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, ",
        "#{region,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{postal,jdbcType=VARCHAR}, #{consignee,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP})"
    })
    int insert(Address record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Nov 25 17:20:28 CST 2018
     */
    @Select({
        "select",
        "addrid, userid, province, city, region, address, postal, consignee, phone, status, ",
        "createdate",
        "from address",
        "where addrid = #{addrid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="addrid", property="addrid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="userid", property="userid", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="region", property="region", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="postal", property="postal", jdbcType=JdbcType.VARCHAR),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="createdate", property="createdate", jdbcType=JdbcType.TIMESTAMP)
    })
    Address selectByPrimaryKey(String addrid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Nov 25 17:20:28 CST 2018
     */
    @Select({
        "select",
        "addrid, userid, province, city, region, address, postal, consignee, phone, status, ",
        "createdate",
        "from address"
    })
    @Results({
        @Result(column="addrid", property="addrid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="userid", property="userid", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="region", property="region", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="postal", property="postal", jdbcType=JdbcType.VARCHAR),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="createdate", property="createdate", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Address> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Nov 25 17:20:28 CST 2018
     */
    @Update({
        "update address",
        "set userid = #{userid,jdbcType=VARCHAR},",
          "province = #{province,jdbcType=VARCHAR},",
          "city = #{city,jdbcType=VARCHAR},",
          "region = #{region,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "postal = #{postal,jdbcType=VARCHAR},",
          "consignee = #{consignee,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=VARCHAR},",
          "createdate = #{createdate,jdbcType=TIMESTAMP}",
        "where addrid = #{addrid,jdbcType=VARCHAR}"
    })
    Integer updateByPrimaryKey(Address record);
    
    @SelectProvider(type = com.springboot.entity.dyna.AddressDynaProvider.class, method = "selectProvider")
    @Results({
        @Result(column="addrid", property="addrid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="userid", property="userid", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="region", property="region", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="postal", property="postal", jdbcType=JdbcType.VARCHAR),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="createdate", property="createdate", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Address> findList(Map<String, Object> map);
    
    @SelectProvider(type = com.springboot.entity.dyna.AddressDynaProvider.class, method = "updateProvider")
    Integer update(Map<String, Object> map);
}