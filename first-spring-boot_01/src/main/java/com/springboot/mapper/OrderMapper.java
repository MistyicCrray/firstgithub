package com.springboot.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import com.springboot.entity.Order;

@Mapper
public interface OrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order
     *
     * @mbg.generated Mon Mar 18 22:07:52 CST 2019
     */
    @Delete({
        "delete from t_order",
        "where order_id = #{orderId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String orderId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order
     *
     * @mbg.generated Mon Mar 18 22:07:52 CST 2019
     */
    @Insert({
        "insert into t_order (order_id, addr_id, ",
        "user_id, payment, ",
        "status)",
        "values (#{orderId,jdbcType=VARCHAR}, #{addrId,jdbcType=VARCHAR}, ",
        "#{userId,jdbcType=VARCHAR}, #{payment,jdbcType=DOUBLE}, ",
        "#{status,jdbcType=VARCHAR})"
    })
    int insert(Order record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order
     *
     * @mbg.generated Mon Mar 18 22:07:52 CST 2019
     */
    @Select({
        "select",
        "order_id, addr_id, user_id, payment, status",
        "from t_order",
        "where order_id = #{orderId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="addr_id", property="addrId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="payment", property="payment", jdbcType=JdbcType.DOUBLE),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR)
    })
    Order selectByPrimaryKey(String orderId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order
     *
     * @mbg.generated Mon Mar 18 22:07:52 CST 2019
     */
    @Select({
        "select",
        "order_id, addr_id, user_id, payment, status",
        "from t_order"
    })
    @Results({
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="addr_id", property="addrId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="payment", property="payment", jdbcType=JdbcType.DOUBLE),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR)
    })
    List<Order> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order
     *
     * @mbg.generated Mon Mar 18 22:07:52 CST 2019
     */
    @Update({
        "update t_order",
        "set addr_id = #{addrId,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "payment = #{payment,jdbcType=DOUBLE},",
          "status = #{status,jdbcType=VARCHAR}",
        "where order_id = #{orderId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Order record);
    

	@UpdateProvider(type = com.springboot.entity.dyna.OrderDynaProvider.class, method = "updateProvider")
	int update(Map<String, Object> map);
	
	@SelectProvider(type = com.springboot.entity.dyna.OrderDynaProvider.class, method = "selectProvider")
	@Results({
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="addr_id", property="addrId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="payment", property="payment", jdbcType=JdbcType.DOUBLE),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR)
    })
	int findList(Map<String, Object> map);
}