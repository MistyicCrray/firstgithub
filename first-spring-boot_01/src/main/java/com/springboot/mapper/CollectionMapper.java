package com.springboot.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import com.springboot.entity.Collection;

@Mapper
public interface CollectionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_collection
     *
     * @mbg.generated Thu Apr 25 16:27:44 CST 2019
     */
    @Delete({
        "delete from t_collection",
        "where collectionId = #{collectionid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String collectionid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_collection
     *
     * @mbg.generated Thu Apr 25 16:27:44 CST 2019
     */
    @Insert({
        "insert into t_collection (collectionId, productId, ",
        "userId)",
        "values (#{collectionid,jdbcType=VARCHAR}, #{productid,jdbcType=VARCHAR}, ",
        "#{userid,jdbcType=VARCHAR})"
    })
    int insert(Collection record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_collection
     *
     * @mbg.generated Thu Apr 25 16:27:44 CST 2019
     */
    @Select({
        "select",
        "collectionId, productId, userId",
        "from t_collection",
        "where collectionId = #{collectionid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="collectionId", property="collectionid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="productId", property="productid", jdbcType=JdbcType.VARCHAR),
        @Result(column="userId", property="userid", jdbcType=JdbcType.VARCHAR)
    })
    Collection selectByPrimaryKey(String collectionid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_collection
     *
     * @mbg.generated Thu Apr 25 16:27:44 CST 2019
     */
    @Select({
        "select",
        "collectionId, productId, userId",
        "from t_collection"
    })
    @Results({
        @Result(column="collectionId", property="collectionid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="productId", property="productid", jdbcType=JdbcType.VARCHAR),
        @Result(column="userId", property="userid", jdbcType=JdbcType.VARCHAR)
    })
    List<Collection> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_collection
     *
     * @mbg.generated Thu Apr 25 16:27:44 CST 2019
     */
    @Update({
        "update t_collection",
        "set productId = #{productid,jdbcType=VARCHAR},",
          "userId = #{userid,jdbcType=VARCHAR}",
        "where collectionId = #{collectionid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Collection record);
    
    @SelectProvider(type = com.springboot.entity.dyna.CollectionDynaProvider.class, method = "selectProvider")
    @Results({
        @Result(column="userid", property="userid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="collectionid", property="collectionid", jdbcType=JdbcType.VARCHAR),
        @Result(column="proid", property="proid", jdbcType=JdbcType.VARCHAR),
        @Result(column="pname", property="pname", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="isNotAuction", property="isnotauction", jdbcType=JdbcType.VARCHAR)
    })
    List<Map<String, Object>> findList(Map<String, Object> map);
}