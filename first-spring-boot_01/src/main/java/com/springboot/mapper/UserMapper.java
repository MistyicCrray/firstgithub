package com.springboot.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import com.springboot.entity.User;
@Mapper
public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated Thu Mar 14 09:08:27 CST 2019
     */
    @Delete({
        "delete from t_user",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated Thu Mar 14 09:08:27 CST 2019
     */
    @Insert({
        "insert into t_user (id, username, ",
        "password, gender, ",
        "img, create_time, ",
        "state, address, ",
        "phone, loginname, ",
        "email, usertype, ",
        "activeCode, activeDate, ",
        "adreess, lastLoginTime, ",
        "province, city, ",
        "area)",
        "values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, ",
        "#{img,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{state,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{loginname,jdbcType=VARCHAR}, ",
        "#{email,jdbcType=VARCHAR}, #{usertype,jdbcType=VARCHAR}, ",
        "#{activecode,jdbcType=VARCHAR}, #{activedate,jdbcType=TIMESTAMP}, ",
        "#{adreess,jdbcType=VARCHAR}, #{lastlogintime,jdbcType=TIMESTAMP}, ",
        "#{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, ",
        "#{area,jdbcType=VARCHAR})"
    })
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated Thu Mar 14 09:08:27 CST 2019
     */
    @Select({
        "select",
        "id, username, password, gender, img, create_time, state, address, phone, loginname, ",
        "email, usertype, activeCode, activeDate, adreess, lastLoginTime, province, city, ",
        "area",
        "from t_user",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="loginname", property="loginname", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="usertype", property="usertype", jdbcType=JdbcType.VARCHAR),
        @Result(column="activeCode", property="activecode", jdbcType=JdbcType.VARCHAR),
        @Result(column="activeDate", property="activedate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="adreess", property="adreess", jdbcType=JdbcType.VARCHAR),
        @Result(column="lastLoginTime", property="lastlogintime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="area", property="area", jdbcType=JdbcType.VARCHAR)
    })
    User selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated Thu Mar 14 09:08:27 CST 2019
     */
    @Select({
        "select",
        "id, username, password, gender, img, create_time, state, address, phone, loginname, ",
        "email, usertype, activeCode, activeDate, adreess, lastLoginTime, province, city, ",
        "area",
        "from t_user"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="loginname", property="loginname", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="usertype", property="usertype", jdbcType=JdbcType.VARCHAR),
        @Result(column="activeCode", property="activecode", jdbcType=JdbcType.VARCHAR),
        @Result(column="activeDate", property="activedate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="adreess", property="adreess", jdbcType=JdbcType.VARCHAR),
        @Result(column="lastLoginTime", property="lastlogintime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="area", property="area", jdbcType=JdbcType.VARCHAR)
    })
    List<User> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated Thu Mar 14 09:08:27 CST 2019
     */
    @Update({
        "update t_user",
        "set username = #{username,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "gender = #{gender,jdbcType=VARCHAR},",
          "img = #{img,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "state = #{state,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "loginname = #{loginname,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR},",
          "usertype = #{usertype,jdbcType=VARCHAR},",
          "activeCode = #{activecode,jdbcType=VARCHAR},",
          "activeDate = #{activedate,jdbcType=TIMESTAMP},",
          "adreess = #{adreess,jdbcType=VARCHAR},",
          "lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},",
          "province = #{province,jdbcType=VARCHAR},",
          "city = #{city,jdbcType=VARCHAR},",
          "area = #{area,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(User record);
    
    @SelectProvider(type = com.springboot.entity.dyna.UserDynaProvider.class, method = "selectProvider")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="createdate", property="createdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="loginname", property="loginname", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="usertype", property="usertype", jdbcType=JdbcType.VARCHAR),
        @Result(column="activeCode", property="activecode", jdbcType=JdbcType.VARCHAR),
        @Result(column="activeDate", property="activedate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="adreess", property="adreess", jdbcType=JdbcType.VARCHAR),
        @Result(column="lastLoginTime", property="lastlogintime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="area", property="area", jdbcType=JdbcType.VARCHAR)
    })
    List<User> findList(Map<String, Object> map);
    
    @SelectProvider(type = com.springboot.entity.dyna.UserDynaProvider.class, method = "updateProvider")
    Integer update(Map<String, Object> map);
    
    @Select({
        "select",
        "id, username, password, gender, img, create_time, state, loginName, activeCode, ",
        "activeDate, adreess, lastLoginTime, email, usertype",
        "from user",
        "where loginname = #{loginname,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="createdate", property="createdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="loginname", property="loginname", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="usertype", property="usertype", jdbcType=JdbcType.VARCHAR),
        @Result(column="activeCode", property="activecode", jdbcType=JdbcType.VARCHAR),
        @Result(column="activeDate", property="activedate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="adreess", property="adreess", jdbcType=JdbcType.VARCHAR),
        @Result(column="lastLoginTime", property="lastlogintime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="area", property="area", jdbcType=JdbcType.VARCHAR)
    })
    User selectByLoginName(String loginname);
}