package com.springboot.mapper;

import com.springboot.entity.Product;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
@Mapper
public interface ProductMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbggenerated Tue Nov 06 14:26:28 CST 2018
     */
    @Delete({
        "delete from product",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbggenerated Tue Nov 06 14:26:28 CST 2018
     */
    @Insert({
        "insert into product (id, name, ",
        "category, price, ",
        "detail, createdate, ",
        "updatedate, createby, ",
        "updateby, color, ",
        "img, userid, hits, ",
        "minprice, faver)",
        "values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, ",
        "#{category,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, ",
        "#{detail,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, ",
        "#{updatedate,jdbcType=TIMESTAMP}, #{createby,jdbcType=VARCHAR}, ",
        "#{updateby,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, ",
        "#{img,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{hits,jdbcType=INTEGER}, ",
        "#{minprice,jdbcType=REAL}, #{faver,jdbcType=INTEGER})"
    })
    int insert(Product record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbggenerated Tue Nov 06 14:26:28 CST 2018
     */
    @Select({
        "select",
        "id, name, category, price, detail, createdate, updatedate, createby, updateby, ",
        "color, img, userid, hits, minprice, faver",
        "from product",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="category", property="category", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="detail", property="detail", jdbcType=JdbcType.VARCHAR),
        @Result(column="createdate", property="createdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updatedate", property="updatedate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="createby", property="createby", jdbcType=JdbcType.VARCHAR),
        @Result(column="updateby", property="updateby", jdbcType=JdbcType.VARCHAR),
        @Result(column="color", property="color", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="userid", property="userid", jdbcType=JdbcType.VARCHAR),
        @Result(column="hits", property="hits", jdbcType=JdbcType.INTEGER),
        @Result(column="minprice", property="minprice", jdbcType=JdbcType.REAL),
        @Result(column="faver", property="faver", jdbcType=JdbcType.INTEGER)
    })
    Product selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbggenerated Tue Nov 06 14:26:28 CST 2018
     */
    @Select({
        "select",
        "id, name, category, price, detail, createdate, updatedate, createby, updateby, ",
        "color, img, userid, hits, minprice, faver",
        "from product"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="category", property="category", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="detail", property="detail", jdbcType=JdbcType.VARCHAR),
        @Result(column="createdate", property="createdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updatedate", property="updatedate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="createby", property="createby", jdbcType=JdbcType.VARCHAR),
        @Result(column="updateby", property="updateby", jdbcType=JdbcType.VARCHAR),
        @Result(column="color", property="color", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="userid", property="userid", jdbcType=JdbcType.VARCHAR),
        @Result(column="hits", property="hits", jdbcType=JdbcType.INTEGER),
        @Result(column="minprice", property="minprice", jdbcType=JdbcType.REAL),
        @Result(column="faver", property="faver", jdbcType=JdbcType.INTEGER)
    })
    List<Product> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbggenerated Tue Nov 06 14:26:28 CST 2018
     */
    @Update({
        "update product",
        "set name = #{name,jdbcType=VARCHAR},",
          "category = #{category,jdbcType=VARCHAR},",
          "price = #{price,jdbcType=DOUBLE},",
          "detail = #{detail,jdbcType=VARCHAR},",
          "createdate = #{createdate,jdbcType=TIMESTAMP},",
          "updatedate = #{updatedate,jdbcType=TIMESTAMP},",
          "createby = #{createby,jdbcType=VARCHAR},",
          "updateby = #{updateby,jdbcType=VARCHAR},",
          "color = #{color,jdbcType=VARCHAR},",
          "img = #{img,jdbcType=VARCHAR},",
          "userid = #{userid,jdbcType=VARCHAR},",
          "hits = #{hits,jdbcType=INTEGER},",
          "minprice = #{minprice,jdbcType=REAL},",
          "faver = #{faver,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Product record);
    
    @SelectProvider(type = com.springboot.entity.dyna.ProductDynaProvider.class, method = "selectProvider")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="category", property="category", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="detail", property="detail", jdbcType=JdbcType.VARCHAR),
        @Result(column="createdate", property="createdate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updatedate", property="updatedate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="createby", property="createby", jdbcType=JdbcType.VARCHAR),
        @Result(column="updateby", property="updateby", jdbcType=JdbcType.VARCHAR),
        @Result(column="color", property="color", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="userid", property="userid", jdbcType=JdbcType.VARCHAR),
        @Result(column="hits", property="hits", jdbcType=JdbcType.INTEGER),
        @Result(column="minprice", property="minprice", jdbcType=JdbcType.REAL),
        @Result(column="faver", property="faver", jdbcType=JdbcType.INTEGER)
    })
    List<Product> findList(Map<String, Object> map);
    
    @SelectProvider(type = com.springboot.entity.dyna.ProductDynaProvider.class, method = "updateProvider")
    int update(Map<String, Object> map);
}